Interface is the blue print of the class, means it is used to specify the behavior that class needs to implement
-used for achieving abstraction
-keyword interface has to be used when creating a class:
        public interface name{}
- main purpose is to achieve abstraction
-you have to create an abstract method in interface class
-create an interface class can be done directly when creating a class by choosing not Java class as usual, but selecting interface
-in interface you are  creating an abstract method without specifying its abstract
-public access modifier is given by default
-interface will not accept protected, private
-when using interface class as a super class, we call it super type
 inheritance will be through key word "implements" instead of extends

 Why do we need interface:
 A class can inherit from ONE class only (extends)
 A class can inherit  multiple interfaces (implements)

what we have in interface
-variables static and final
-methods: abstract, static, default
static void method1(){}
default void method2(){}

what we cannot have in interface
-constructor
instance variable
instance method
instance block
static block

What was the reason that we cannot have static block in interface?  interface can have static and final variables
  static block is for re assign the static variable  .. but variable in interface is final and static cant be re assign :see_no_evil:

And interface itself just cannot allow any blocks

implements keyword has to be used only once
Interface: blueprint of class. specifies the behaviors a class should implement
           used for achiving abstraction
           can be super type to a class
           class to inherit from interface is by using implemnts keyword
            there is only one access modifier allowed in interface ==> public
           public interface interfaceName{
           }

Interface_Intro
why do we need interface?
    A class can inherit from one class only (extends)
    A class can inherit multiple interfaces (implements)
what we can have in interface?
        variable: static & final by bdefault
        methods: abstract methods, static methods, default method

what we cannot have in interface?
        constructor
        instance variable
        instance methods
        blocks
              RemoteWebDriver     imeplents WebDriver, TakeScreenShot, JavaScriptExecuter ..
           /       |       \

         /         |         \
       chrome   firefox   opera
WebDriver driver = new ChromeDriver();
extends vs implements: both are used for inheriting
        extends:
                class   extends   class
            interface   extends     interface
        implements:
                class   implements  interface1, Interface2 ...
abstract class vs interface: both used for achieving abstraction
                             both are meant to be inherited
                             both canbnot be final
                 abstract class: can have constructor
                                  instance method
                                  blocks
                                  insatnce variables
                                  All access modifiers
                 interface: default method
                            publci is given by default
                            variables are static & final by default
