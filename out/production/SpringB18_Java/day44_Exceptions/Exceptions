Exceptions
    there two types of exception:
            unchecked (unexpected event): occures during run time
                RuntimeException class is the parent of all exceptions
            checked (unwanted events): occurs during the compile time. needs to be handled IMMEDIATELY, underlined exception

Thread is a class that comes with Java automatically


exception handling:
    try & catch: blocks, used for handling the exception
            try{
                exception statements/code, what is giving an error
            }catch(ExceptionClass  VariableName){
            }



            printStackTrace(): prints the stack trace of exception


            getMessage(): discription of exception

 MULTI CATCH
          I can use catch block as many times as I need, unless I catch which of the exception is causing error
            try{
            }catch(){
            }catch(){
            }
            ...
            mulit-catch block: parent exception class CAN NOT be placed before its child exception


    catch(Exception e)- will catch all exceptions, because its above all exceptions
    I can try to catch many exceptions, not preferable
      try {
                System.out.println("Hello");
                System.out.println("Hola");
                System.out.println("Cybertek");
                System.out.println("Java");
            }catch (Exception e){
               System.out.println();
           }

finally: always gets executed regardless of the exception

    Exception//parent exception (IOException, CassNotFoundException,CloneNotSupportedException, RunTimeException)
    -> RunTime Exception
        ->ArithmeticException
        ->ClassCastException
        ->IllegalArguimentException  -< NumberFormatException
        ->IllegalStateException
        ->IndexOutOfBoundsException <-ArrayIndexOutOfBounds
        ->NoSUchElementException <- InputMismatch
        ->NullPointerException